#include<stdio.h>
#include<iostream>
#include<algorithm>
#include<vector>
 using namespace std;
 bool ispossible(vector<long long int >trees, long long int m , long long  int n , long long int mid){
   long long int woodcollect=0;
   for(int i=0;i<trees.size();i++){
     if(trees[i]>mid){
       woodcollect +=trees[i]-mid;
     }
   }
   return woodcollect>=m;
 }
 long long int maxswa(vector<long long int>trees, long long int  m , long long int n ){
   long long int start=0 , end,ans=-1;
   end=*max_element(trees.begin(),trees.end());
   while(start<=end){
     long long int mid = start+(end-start)/2;
     if(ispossible(trees, m , n , mid)){
       ans=mid;
       start=mid+1;
     }
     else{
       end=mid-1;
     }
   }return ans;
    }
int main(){
  long long int m,n;
  cin>>n>>m;
  vector<long long int>trees;
  while(n--){
    long long int height;
    cin>>height;
    trees.push_back(height);
  }
  cout<<maxswa(trees,m ,n);
  return 0;

}
